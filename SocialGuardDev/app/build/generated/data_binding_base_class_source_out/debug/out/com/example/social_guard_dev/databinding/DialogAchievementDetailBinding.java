// Generated by view binder compiler. Do not edit!
package com.example.social_guard_dev.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.social_guard_dev.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAchievementDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView achievementDescription;

  @NonNull
  public final ImageView achievementIcon;

  @NonNull
  public final TextView achievementName;

  @NonNull
  public final TextView pointsText;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView progressText;

  @NonNull
  public final TextView statusText;

  private DialogAchievementDetailBinding(@NonNull LinearLayout rootView,
      @NonNull TextView achievementDescription, @NonNull ImageView achievementIcon,
      @NonNull TextView achievementName, @NonNull TextView pointsText,
      @NonNull ProgressBar progressBar, @NonNull TextView progressText,
      @NonNull TextView statusText) {
    this.rootView = rootView;
    this.achievementDescription = achievementDescription;
    this.achievementIcon = achievementIcon;
    this.achievementName = achievementName;
    this.pointsText = pointsText;
    this.progressBar = progressBar;
    this.progressText = progressText;
    this.statusText = statusText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAchievementDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAchievementDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_achievement_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAchievementDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.achievementDescription;
      TextView achievementDescription = ViewBindings.findChildViewById(rootView, id);
      if (achievementDescription == null) {
        break missingId;
      }

      id = R.id.achievementIcon;
      ImageView achievementIcon = ViewBindings.findChildViewById(rootView, id);
      if (achievementIcon == null) {
        break missingId;
      }

      id = R.id.achievementName;
      TextView achievementName = ViewBindings.findChildViewById(rootView, id);
      if (achievementName == null) {
        break missingId;
      }

      id = R.id.pointsText;
      TextView pointsText = ViewBindings.findChildViewById(rootView, id);
      if (pointsText == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progressText;
      TextView progressText = ViewBindings.findChildViewById(rootView, id);
      if (progressText == null) {
        break missingId;
      }

      id = R.id.statusText;
      TextView statusText = ViewBindings.findChildViewById(rootView, id);
      if (statusText == null) {
        break missingId;
      }

      return new DialogAchievementDetailBinding((LinearLayout) rootView, achievementDescription,
          achievementIcon, achievementName, pointsText, progressBar, progressText, statusText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
