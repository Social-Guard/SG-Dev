// Generated by view binder compiler. Do not edit!
package com.example.social_guard_dev.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.social_guard_dev.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAppUsageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView appNameTextView;

  @NonNull
  public final Button setTimerButton;

  @NonNull
  public final TextView usageTimeTextView;

  private ItemAppUsageBinding(@NonNull LinearLayout rootView, @NonNull TextView appNameTextView,
      @NonNull Button setTimerButton, @NonNull TextView usageTimeTextView) {
    this.rootView = rootView;
    this.appNameTextView = appNameTextView;
    this.setTimerButton = setTimerButton;
    this.usageTimeTextView = usageTimeTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAppUsageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAppUsageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_app_usage, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAppUsageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appNameTextView;
      TextView appNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (appNameTextView == null) {
        break missingId;
      }

      id = R.id.setTimerButton;
      Button setTimerButton = ViewBindings.findChildViewById(rootView, id);
      if (setTimerButton == null) {
        break missingId;
      }

      id = R.id.usageTimeTextView;
      TextView usageTimeTextView = ViewBindings.findChildViewById(rootView, id);
      if (usageTimeTextView == null) {
        break missingId;
      }

      return new ItemAppUsageBinding((LinearLayout) rootView, appNameTextView, setTimerButton,
          usageTimeTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
